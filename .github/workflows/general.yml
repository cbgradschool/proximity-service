name: Rust

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    environment: production
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: proximity_service
          POSTGRES_HOST: localhost
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - name: Migrate database
        env:
          APP_DATABASE_URL: ${{ secrets.APP_DATABASE_URL }}
        run: |
          cargo install sqlx-cli --no-default-features --features rustls,postgres
          sqlx migrate run --database-url "$APP_DATABASE_URL"
      - name: Install latest nextest release
        uses: taiki-e/install-action@nextest
      - name: Test with latest nextest release
        env:
          APP_DATABASE_URL: ${{ secrets.APP_DATABASE_URL }}
          APP_HONEYCOMB_API_KEY: ${{ secrets.APP_HONEYCOMB_API_KEY }}
          DATABASE_URL: ${{ secrets.APP_DATABASE_URL }} # Duplicated for sqlx::test
        uses: actions-rs/cargo@v1
        with:
          command: nextest
          args: run --all-features

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - name: Enforce formatting
        run: cargo fmt --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: proximity_service
          POSTGRES_HOST: localhost
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - uses: Swatinem/rust-cache@v2
      - name: Linting
        run: cargo clippy -- -D warnings

  coverage:
    name: Code coverage
    runs-on: ubuntu-latest
    environment: production
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: proximity_service
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    # App is being run within a container
    container:
      image: xd009642/tarpaulin
      options: --security-opt seccomp=unconfined
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - name: Migrate database
        env:
          APP_DATABASE_URL: postgres://postgres:password@postgres:5432/proximity_service
        run: |
          cargo install sqlx-cli --no-default-features --features rustls,postgres
          sqlx migrate run --database-url "$APP_DATABASE_URL"
      - name: Generate code coverage
        env:
          APP_HONEYCOMB_API_KEY: ${{ secrets.APP_HONEYCOMB_API_KEY }}
          APP_DATABASE_URL: postgres://postgres:password@postgres:5432/proximity_service
          POSTGRES_HOST: postgres
          POSTGRES_PORT: 5432
        run: |
          cargo tarpaulin --verbose --workspace
